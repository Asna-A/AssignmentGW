-- E-commerce Platform Schema

CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(100),
    Email VARCHAR(100),
    RegistrationDate DATE
);

CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(200),
    Price DECIMAL(10, 2),
    CategoryID INT
);

CREATE TABLE Categories (
    CategoryID INT PRIMARY KEY,
    CategoryName VARCHAR(100)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Questions

-- 1. List all products with their category names, including products without a category.

select productname,categoryname from products p left join categories c on p.categoryid=c.categoryid

-- 2. Display all customers and their order history, including customers who haven't placed any orders.

select customername,productname,orderdate,quantity,totalamount from customers c left join orders o on  c.CustomerID=o.CustomerID left join OrderDetails od on od.orderid=o.orderid left join products p on p.ProductID=od.ProductID

-- 3. Show all categories and the products in each category, including categories without any products.

select Categoryname,productname from Categories c left join  Products p on c.categoryid=p.categoryid

-- 4. List all possible customer-product combinations, regardless of whether a purchase has occurred.

select customername,productname from Customers cross join products

-- 5. Display all orders with customer and product information, including orders where either the customer or product information is missing.

select o.orderid,ProductName,c.CustomerID,Quantity,OrderDate,TotalAmount from orders o full join orderdetails od on o.orderid=od.orderid left join products p on od.ProductID=p.ProductID left join customers c on o.CustomerID=c.CustomerID

-- 6. Show all products that have never been ordered, along with their category information.

select productname,categoryname from products p left join categories ca on p.CategoryID=ca.CategoryID left join  OrderDetails od on od.ProductID=p.ProductID where od.ProductID is null

-- 7. List all customers who have placed orders in the last week, along with the products they've purchased.

select customername,orderdate,productname from orders o left join customers c on o.CustomerID=c.CustomerID left join OrderDetails od on od.OrderID=o.OrderID left join Products p on p.ProductID=od.ProductID where datepart(week,OrderDate)=datepart(week,GETDATE())-1

-- 8. Display all categories with products priced over $100, including categories without such products.

select Categoryname,PRODUCTname from Categories ca left join Products p on ca.CategoryID=p.CategoryID and p.Price>100 

-- 9. Show all orders placed before 2023 and any associated product information.

select PRODUCTname,categoryname from Orders o left join OrderDetails od on od.OrderID=o.OrderID left join products p on p.ProductID=od.ProductID left join Categories ca on ca.CategoryID=p.CategoryID where year(OrderDate)<2023

-- 10. List all possible category-customer combinations, regardless of whether the customer has purchased a product from that category.

select Customername,Categoryname from Customers cross join Categories

